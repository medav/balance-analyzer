#!/usr/bin/env python

import sys

from model import *
from analyzer import *

def IsSat(statement):
    s = Solver()
    s.add(statement)
    issat = s.check() == sat
    if issat:
        return True, s.model()
    else:
        return False, None

def IsValid(statement):
    issat, model = IsSat(Not(statement))
    return not issat, model

a = Analyzer(sys.argv[1])

with open('before.dot', 'w') as f:
    a.DumpDot(f)

a.PostProcess()

with open('after.dot', 'w') as f:
    a.DumpDot(f)

val = a.CollectDataflow(a.exit, 4)

valid_cond = And(*[
    val[i] == val[i + 1]
    for i in range(len(val) - 1)
])

valid, model = IsValid(valid_cond)
never_valid, _ = IsValid(Not(valid_cond))

if valid:
    print('Always Balanced!')
else:
    if never_valid:
        print('Never Balanced!')
    else:
        print('Could be unbalanced!')
        print(model)
